A point set is a set S ⊆ R such that for any interval I, n(S ∩ I) is finite. ("instants")

newtype PointFunction r a = MkPointFunction (r -> r -> [(r,a)])
type PointSet r = PointFunction r ()

A phase function of T is a point set P together with a function f :: R -> T such that for any a,b ⊂ R, if P ∩ (a,b] = {}, then f(a) = f(b)

data PhaseFunction r a = MkPhaseFunction (PointSet r) (r -> a)

A phase set is a set S (subset of R) such that for any closed-open interval I, n(S intersect I) is the union of a finite set of closed-open intervals. ("periods")

A phase is a set S of disjoint closed-open intervals such that given any interval I, n({i mem. S, i int I is non-empty}) is finite

(Avoid before/after cut semantics.)


(intersect Thursday (year 2013))
(interval (delay sunrise -1h) sunrise)
(nth-after 1 Sunday (nth-after 1 full-moon March-equinox))
(after (nth-in 6 Friday month)) "after the sixth Friday in the month" == ???


"from 9pm Saturday to 2am"

"Wednesday 3 of month"???
T n of T



singles:
never
always
now
midnight
midday
day
month
year
week
weekday
weekend
working-week
Sunday etc.
January etc.
Easter
[date & time format]
*sunrise
*sunset
*daytime = sunrise to sunset
*nighttime = sunset to sunrise
*new-moon, full-moon etc.
*March-equinox etc.
*Spring-equinox etc.

Grammar:
(R)
not R
between R
R except R
R R -- intersect
R when R -- intersect
R in R -- intersect
R at R -- intersect
R and R -- union
R,R -- union
start R
end R
from R until R
from R to R
from R
until R
[nth] R in R
*[nth]-last R in R
[nth] R from R
*[nth]-last R before R
delay R D
advance R D
*D before R
*D after R

Examples:
"Thursday in 2013"
"from 1h before sunrise to sunrise"
"first Sunday after first full-moon after March-equinox".
"last Monday in May"
